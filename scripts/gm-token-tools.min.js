const e={ID:"gm-token-tools",NAME:"Gamemaster Token Tools for DSA5",LCCNAME:"gmTokenTools"};class Logger{static info(t,i=!1){console.log(e.NAME+` Info | ${t}`),i&&ui.notifications.info(e.NAME+` | ${t}`)}static error(t,i=!1){console.error(e.NAME+` Error | ${t}`),i&&ui.notifications.error(e.NAME+` | ${t}`)}static debug(t,i){if(game.gmTokenTools?game.gmTokenTools.isDebug:Utils.getSetting("debug",!1)){if(!i)return void console.log(e.NAME+` Debug | ${t}`);const s=Utils.deepClone(i);console.log(e.NAME+` Debug | ${t}`,s)}}}class Utils{static deepClone(e,t){return deepClone(e,t)}static getActor(e,t){let i=null;return t&&(i=canvas.tokens.placeables.find((e=>e.id===t))),i?i.actor:game.actors.get(e)}static getItem(e,t){return e.items.get(t)}static getToken(e){return canvas.tokens.placeables.find((t=>t.id===e))}static getControlledTokens(){return game.canvas.tokens.controlled}static getControlledToken(){return game.canvas.tokens.controlled[0]}static getSetting(t,i=null){let s=i??null;try{s=game.settings.get(e.ID,t)}catch{console.log(e.NAME+` Debug | GameConfig '${t}' not found`)}return s}static async setSetting(t,i){game.settings.settings.get(`${e.ID}.${t}`)?(await game.settings.set(e.ID,t,i),Logger.debug(`GameConfig '${t}' set to '${i}'`)):Logger.debug(`GameConfig '${t}' not found`)}static getUserFlag(t){return game.user.getFlag(e.ID,t)}static async setUserFlag(t,i){await game.user.setFlag(e.ID,t,i)}static async unsetUserFlag(t){await game.user.unsetFlag(e.ID,t)}static i18n(t){return game.i18n.localize(e.LCCNAME+"."+t)}static isModuleActive(e){const t=game.modules.get(e);return t&&t.active}}class GmTokenTools extends Application{async init(){this.isDebug=Utils.getSetting("debug"),Logger.debug("Application Initialized")}updateSettings(){Logger.debug("Updating Settings..."),this.isDebug=Utils.getSetting("debug"),Logger.debug("Settings Updated")}async addTokenActions(e,t,i){let s=canvas.tokens.get(i._id).actor;if(void 0===s)return;let a=[];for(let e of s.items)switch(e.type){case"adventage":case"disadventage":Logger.debug("item Adv/DisAdv",e);break;case"specialability":Logger.debug("item SpecAbili",e);break;case"combatskill":Logger.debug("item combSkill",e);break;case"skill":Logger.debug("skill",e),e.system.talentValue.value>0&&a.push({name:e.name,value:e.system.talentValue.value})}let o="",n="";a.sort(((e,t)=>t.value-e.value));for(let e of a)n+="<li onClick=\"game.dsa5.macro.requestRoll('"+e.name+"', 0);\">"+e.name+" ("+e.value+")</li>";o='<div class="control-icon token-tool-icon" title="Roll Checks"><i class="fas fa-dice"></i> '+Utils.i18n("actions.talents.name")+'</div><div class="token-tool-list-wrapper"><ul class="token-tool-list">'+n+"</ul></div>";let l="";l="<li onClick=\"game.dsa5.macro.requestRoll('Mut', 0);\">("+s.system.characteristics.mu.value+") "+Utils.i18n("actions.characteristics.mu.name")+"</li>",l+="<li onClick=\"game.dsa5.macro.requestRoll('Klugheit', 0);\">("+s.system.characteristics.kl.value+") "+Utils.i18n("actions.characteristics.kl.name")+"</li>",l+="<li onClick=\"game.dsa5.macro.requestRoll('Intuition', 0);\">("+s.system.characteristics.in.value+") "+Utils.i18n("actions.characteristics.in.name")+"</li>",l+="<li onClick=\"game.dsa5.macro.requestRoll('Charisma', 0);\">("+s.system.characteristics.ch.value+") "+Utils.i18n("actions.characteristics.ch.name")+"</li>",l+="<li onClick=\"game.dsa5.macro.requestRoll('Fingerfertigkeit', 0);\">("+s.system.characteristics.ff.value+") "+Utils.i18n("actions.characteristics.ff.name")+"</li>",l+="<li onClick=\"game.dsa5.macro.requestRoll('Gewandheit', 0);\">("+s.system.characteristics.ge.value+") "+Utils.i18n("actions.characteristics.ge.name")+"</li>",l+="<li onClick=\"game.dsa5.macro.requestRoll('Konstitution', 0);\">("+s.system.characteristics.ko.value+") "+Utils.i18n("actions.characteristics.ko.name")+"</li>",l+="<li onClick=\"game.dsa5.macro.requestRoll('KÃ¶rperkraft', 0);\">("+s.system.characteristics.kk.value+") "+Utils.i18n("actions.characteristics.kk.name")+"</li>",o+='<div class="control-icon token-tool-icon" title="Roll Checks"><i class="fas fa-dice"></i> '+Utils.i18n("actions.characteristics.name")+'</div><div class="token-tool-list-wrapper"><ul class="token-tool-list">'+l+"</ul></div>";let c="";c+="<li onClick=\"game.macros.get('i7f0cLStubnwqy8q')._executeScript({actor:canvas.tokens.get('"+i._id+"').actor, token:canvas.tokens.get('"+i._id+"').actor}); return false;\">1d6 Schaden</li>",c+="<li onClick=\"game.dsa5.macro.requestRoll('Regeneration', 0);\">Regenerieren</li>",o+='<div class="control-icon token-tool-icon" title="Roll Checks"><i class="fas fa-dice"></i> Specials</div><div class="token-tool-list-wrapper"><ul class="token-tool-list">'+c+"</ul></div>";let r=$(`<div class="col token-tool-column-right">${o}</div>`);t.find(".col.right").wrap('<div class="token-tool-container">'),t.find(".col.right").before(r)}async addTokenInfos(e,t,i){let s=Utils.getActor(null,i._id);if(void 0===s)return;let a="",o=s.system.status.speed.max;a+='<div class="control-icon token-tool-icon" title="'+Utils.i18n("infos.speed.name")+": "+o+'"><i class="fas fa-walking"></i> '+o+"</div>";let n="-";n="creature"==s.type?"crt":"npc"==s.type?"npc":"character"==s.type?s.system.details.experience.total:"-",a+='<div class="control-icon token-tool-icon" title="'+Utils.i18n("infos.expTotal.name")+": "+n+'"><i class="fas fa-shield-alt"></i> '+n+"</div>";let l=$(`<div class="col token-tool-column-left">${a}</div>`);t.find(".col.left").wrap('<div class="token-tool-container">'),t.find(".col.left").before(l)}async rollDamageForToken(e){let t=Utils.getToken(e);if(void 0===t)return;let i=await new Roll("1d6").evaluate({async:!0});game.dice3d?.showForRoll(i),t.actor.applyDamage(i.total);let s=`<h2>Du nimmst Schaden!</h2>\n        <strong>${t.actor.name}</strong> nimmt <span class="die-damage d6">${i.total}</span> Punkte Schaden.`;ChatMessage.create({user:game.user._id,speaker:ChatMessage.getSpeaker({token:actor}),content:s})}}const registerSettings=function(){game.settings.register(e.ID,"startup",{name:"One-Time Startup Prompt",scope:"world",config:!1,type:Boolean,default:!1}),game.settings.register(e.ID,"debug",{name:Utils.i18n("settings.debug.name"),hint:Utils.i18n("settings.debug.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:t=>{!function onChangeFunction(t){game[e.LCCNAME]&&game[e.LCCNAME].updateSettings()}()}}),game.settings.register(e.ID,"gmOnly",{name:Utils.i18n("settings.gmOnly.name"),hint:Utils.i18n("settings.gmOnly.hint"),scope:"world",config:!0,default:!0,type:Boolean}),game.settings.register(e.ID,"showCombatSkills",{name:Utils.i18n("settings.showCombatSkills.name"),hint:Utils.i18n("settings.showCombatSkills.hint"),scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register(e.ID,"defaultAction",{name:Utils.i18n("settings.defaultAction.name"),hint:Utils.i18n("settings.defaultAction.hint"),scope:"world",config:!0,type:String,default:"requestRoll",choices:{requestRoll:Utils.i18n("settings.defaultAction.choices.requestRoll"),initiateRoll:Utils.i18n("settings.defaultAction.choices.initiateRoll")}}),Logger.debug("Settings Registered")};Hooks.on("ready",(async()=>{Hooks.callAll(e.LCCNAME+"Initialized"),Logger.info("Ready")})),Hooks.once("init",(()=>{registerSettings(),Utils.debug("Init Done")})),Hooks.on("canvasReady",(async()=>{Hooks.on(e.LCCNAME+"Initialized",(async()=>{const e=Utils.getSetting("gmOnly");game.gmTokenTools||(game.gmTokenTools=new GmTokenTools,await game.gmTokenTools.init()),e&&game.user.isGM&&Hooks.on("renderTokenHUD",((e,t,i)=>{game.gmTokenTools.addTokenInfos(e,t,i),game.gmTokenTools.addTokenActions(e,t,i)})),Hooks.on("updateToken",((e,t,i)=>{Object.hasOwn(i,"y")||Object.hasOwn("diff","x")||Logger.debug(updateToken)}))}))}));export{GmTokenTools,Logger,e as MODULE,Utils,registerSettings};
